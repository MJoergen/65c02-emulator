#include "decode.h"

const addrMode_t addrModes[256] = 
{//   0x00     0x01     0x02     0x03     0x04     0x05     0x06     0x07      0x08     0x09     0x0A     0x0B     0x0C     0x0D     0x0E     0x0F
    AM_IMM,  AM_INDX, AM_RES,  AM_RES,  AM_RES,  AM_ZP,   AM_ZP,   AM_RES,   AM_NONE, AM_IMM,  AM_ACC,  AM_RES,  AM_RES,  AM_ABS,  AM_ABS,  AM_RES,  // 0x00
    AM_REL,  AM_INDY, AM_RES,  AM_RES,  AM_RES,  AM_ZPX,  AM_ZPX,  AM_RES,   AM_NONE, AM_ABSY, AM_RES,  AM_RES,  AM_RES,  AM_ABSX, AM_ABSX, AM_RES,  // 0x10
    AM_ABS,  AM_INDX, AM_RES,  AM_RES,  AM_ZP,   AM_ZP,   AM_ZP,   AM_RES,   AM_NONE, AM_IMM,  AM_ACC,  AM_RES,  AM_ABS,  AM_ABS,  AM_ABS,  AM_RES,  // 0x20
    AM_REL,  AM_INDY, AM_RES,  AM_RES,  AM_RES,  AM_ZPX,  AM_ZPX,  AM_RES,   AM_NONE, AM_ABSY, AM_RES,  AM_RES,  AM_RES,  AM_ABSX, AM_ABSX, AM_RES,  // 0x30
    AM_NONE, AM_INDX, AM_RES,  AM_RES,  AM_RES,  AM_ZP,   AM_ZP,   AM_RES,   AM_NONE, AM_IMM,  AM_ACC,  AM_RES,  AM_ABS,  AM_ABS,  AM_ABS,  AM_RES,  // 0x40
    AM_REL,  AM_INDY, AM_RES,  AM_RES,  AM_RES,  AM_ZPX,  AM_ZPX,  AM_RES,   AM_NONE, AM_ABSY, AM_RES,  AM_RES,  AM_RES,  AM_ABSX, AM_ABSX, AM_RES,  // 0x50
    AM_NONE, AM_INDX, AM_RES,  AM_RES,  AM_RES,  AM_ZP,   AM_ZP,   AM_RES,   AM_NONE, AM_IMM,  AM_ACC,  AM_RES,  AM_IND,  AM_ABS,  AM_ABS,  AM_RES,  // 0x60
    AM_REL,  AM_INDY, AM_RES,  AM_RES,  AM_RES,  AM_ZPX,  AM_ZPX,  AM_RES,   AM_NONE, AM_ABSY, AM_RES,  AM_RES,  AM_RES,  AM_ABSX, AM_ABSX, AM_RES,  // 0x70
    AM_RES,  AM_INDX, AM_RES,  AM_RES,  AM_ZP,   AM_ZP,   AM_ZP,   AM_RES,   AM_NONE, AM_RES,  AM_NONE, AM_RES,  AM_ABS,  AM_ABS,  AM_ABS,  AM_RES,  // 0x80
    AM_REL,  AM_INDY, AM_RES,  AM_RES,  AM_ZPX,  AM_ZPX,  AM_ZPY,  AM_RES,   AM_NONE, AM_ABSY, AM_NONE, AM_RES,  AM_RES,  AM_ABSX, AM_RES,  AM_RES,  // 0x90
    AM_IMM,  AM_INDX, AM_IMM,  AM_RES,  AM_ZP,   AM_ZP,   AM_ZP,   AM_RES,   AM_NONE, AM_IMM,  AM_NONE, AM_RES,  AM_ABS,  AM_ABS,  AM_ABS,  AM_RES,  // 0xA0
    AM_REL,  AM_INDY, AM_RES,  AM_RES,  AM_ZPX,  AM_ZPX,  AM_ZPY,  AM_RES,   AM_NONE, AM_ABSY, AM_NONE, AM_RES,  AM_ABSX, AM_ABSX, AM_ABSY, AM_RES,  // 0xB0
    AM_IMM,  AM_INDX, AM_RES,  AM_RES,  AM_ZP,   AM_ZP,   AM_ZP,   AM_RES,   AM_NONE, AM_IMM,  AM_NONE, AM_RES,  AM_ABS,  AM_ABS,  AM_ABS,  AM_RES,  // 0xC0
    AM_REL,  AM_INDY, AM_RES,  AM_RES,  AM_RES,  AM_ZPX,  AM_ZPX,  AM_RES,   AM_NONE, AM_ABSY, AM_RES,  AM_RES,  AM_RES,  AM_ABSX, AM_ABSX, AM_RES,  // 0xD0
    AM_IMM,  AM_INDX, AM_RES,  AM_RES,  AM_ZP,   AM_ZP,   AM_ZP,   AM_RES,   AM_NONE, AM_IMM,  AM_NONE, AM_RES,  AM_ABS,  AM_ABS,  AM_ABS,  AM_RES,  // 0xE0
    AM_REL,  AM_INDY, AM_RES,  AM_RES,  AM_RES,  AM_ZPX,  AM_ZPX,  AM_RES,   AM_NONE, AM_ABSY, AM_RES,  AM_RES,  AM_RES,  AM_ABSX, AM_ABSX, AM_NONE  // 0xF0
}; // addrModes

const instruction_t instructions[256] = 
{//  0x00   0x01   0x02   0x03   0x04   0x05   0x06   0x07    0x08   0x09   0x0A   0x0B   0x0C   0x0D   0x0E   0x0F
    I_BRK, I_ORA, I_RES, I_RES, I_RES, I_ORA, I_ASL, I_RES,  I_PHP, I_ORA, I_ASLA,I_RES, I_RES, I_ORA, I_ASL, I_RES, // 0x00
    I_BPL, I_ORA, I_RES, I_RES, I_RES, I_ORA, I_ASL, I_RES,  I_CLC, I_ORA, I_RES, I_RES, I_RES, I_ORA, I_ASL, I_RES, // 0x10
    I_JSR, I_AND, I_RES, I_RES, I_BIT, I_AND, I_ROL, I_RES,  I_PLP, I_AND, I_ROLA,I_RES, I_BIT, I_AND, I_ROL, I_RES, // 0x20
    I_BMI, I_AND, I_RES, I_RES, I_RES, I_AND, I_ROL, I_RES,  I_SEC, I_AND, I_RES, I_RES, I_RES, I_AND, I_ROL, I_RES, // 0x30
    I_RTI, I_EOR, I_RES, I_RES, I_RES, I_EOR, I_LSR, I_RES,  I_PHA, I_EOR, I_LSRA,I_RES, I_JMP, I_EOR, I_LSR, I_RES, // 0x40
    I_BVC, I_EOR, I_RES, I_RES, I_RES, I_EOR, I_LSR, I_RES,  I_CLI, I_EOR, I_RES, I_RES, I_RES, I_EOR, I_LSR, I_RES, // 0x50
    I_RTS, I_ADC, I_RES, I_RES, I_RES, I_ADC, I_ROR, I_RES,  I_PLA, I_ADC, I_RORA,I_RES, I_JMP, I_ADC, I_ROR, I_RES, // 0x60
    I_BVS, I_ADC, I_RES, I_RES, I_RES, I_ADC, I_ROR, I_RES,  I_SEI, I_ADC, I_RES, I_RES, I_RES, I_ADC, I_ROR, I_RES, // 0x70
    I_RES, I_STA, I_RES, I_RES, I_STY, I_STA, I_STX, I_RES,  I_DEY, I_RES, I_TXA, I_RES, I_STY, I_STA, I_STX, I_RES, // 0x80
    I_BCC, I_STA, I_RES, I_RES, I_STY, I_STA, I_STX, I_RES,  I_TYA, I_STA, I_TXS, I_RES, I_RES, I_STA, I_RES, I_RES, // 0x90
    I_LDY, I_LDA, I_LDX, I_RES, I_LDY, I_LDA, I_LDX, I_RES,  I_TAY, I_LDA, I_TAX, I_RES, I_LDY, I_LDA, I_LDX, I_RES, // 0xA0
    I_BCS, I_LDA, I_RES, I_RES, I_LDY, I_LDA, I_LDX, I_RES,  I_CLV, I_LDA, I_TSX, I_RES, I_LDY, I_LDA, I_LDX, I_RES, // 0xB0
    I_CPY, I_CMP, I_RES, I_RES, I_CPY, I_CMP, I_DEC, I_RES,  I_INY, I_CMP, I_DEX, I_RES, I_CPY, I_CMP, I_DEC, I_RES, // 0xC0
    I_BNE, I_CMP, I_RES, I_RES, I_RES, I_CMP, I_DEC, I_RES,  I_CLD, I_CMP, I_RES, I_RES, I_RES, I_CMP, I_DEC, I_RES, // 0xD0
    I_CPX, I_SBC, I_RES, I_RES, I_CPX, I_SBC, I_INC, I_RES,  I_INX, I_SBC, I_NOP, I_RES, I_CPX, I_SBC, I_INC, I_RES, // 0xE0
    I_BEQ, I_SBC, I_RES, I_RES, I_RES, I_SBC, I_INC, I_RES,  I_SED, I_SBC, I_RES, I_RES, I_RES, I_SBC, I_INC, I_RES  // 0xF0
}; // instructions

